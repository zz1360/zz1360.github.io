const e=JSON.parse('{"key":"v-ff3051be","path":"/blogs/Java/basic/basic010.html","title":"Java中的泛型","lang":"en-US","frontmatter":{"title":"Java中的泛型","date":"2022/04/11","tags":["年份2022"]},"headers":[{"level":2,"title":"为什么引入泛型 Why Use Generics?","slug":"为什么引入泛型-why-use-generics","link":"#为什么引入泛型-why-use-generics","children":[]},{"level":2,"title":"泛型类 Generic Classes","slug":"泛型类-generic-classes","link":"#泛型类-generic-classes","children":[]},{"level":2,"title":"类型参数的约束 Bounded Type Parameters","slug":"类型参数的约束-bounded-type-parameters","link":"#类型参数的约束-bounded-type-parameters","children":[]},{"level":2,"title":"类型安全 Type-safe","slug":"类型安全-type-safe","link":"#类型安全-type-safe","children":[]},{"level":2,"title":"泛型方法 Generic Methods","slug":"泛型方法-generic-methods","link":"#泛型方法-generic-methods","children":[]},{"level":2,"title":"通配符 Wildcard","slug":"通配符-wildcard","link":"#通配符-wildcard","children":[{"level":3,"title":"静态泛型方法","slug":"静态泛型方法","link":"#静态泛型方法","children":[]},{"level":3,"title":"类型擦除","slug":"类型擦除","link":"#类型擦除","children":[]}]}],"git":{},"filePathRelative":"blogs/Java/basic/basic010.md"}');export{e as data};
