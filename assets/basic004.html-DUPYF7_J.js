import{_ as n,c as t,o as l,b as e,f as r}from"./app-DukR-6js.js";const s={};function c(d,a){return l(),t("div",null,a[0]||(a[0]=[e("h2",{id:"概述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#概述","aria-hidden":"true"},"#"),r(" 概述")],-1),e("p",null,"成员变量分为静态成员变量和普通成员变量，前者是属于类的，JDK8以后是存在在元空间中。后者是属于实例的，存储在堆中。成员变量如果没有被赋初始值，则会自动以类型的默认值赋值。有一种情况例外，那就是当成员变量是以final修饰的，就必须显式的赋值。普通成员变量的生命周期是随对象实例的生命周期一起的。",-1),e("p",null,"局部变量是存储在栈中的，其生命周期是跟随方法的生命周期一起的，局部变量是不会自动赋值的。",-1),e("h3",{id:"为什么成员变量有默认值",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#为什么成员变量有默认值","aria-hidden":"true"},"#"),r(),e("strong",null,"为什么成员变量有默认值？")],-1),e("p",null,"对于编译器（javac）来说，局部变量没赋值很好判断，可以直接报错。而成员变量可能是运行时赋值，无法判断，误报“没默认值”又会影响用户体验，所以采用自动赋默认值。",-1)]))}const o=n(s,[["render",c],["__file","basic004.html.vue"]]);export{o as default};
