import{_ as a,c as o,o as r,a as n}from"./app-DukR-6js.js";const t={};function c(d,e){return r(),o("div",null,e[0]||(e[0]=[n('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h2><p><code>Annotation</code> （注解）是 Java5 开始引入的新特性，可以看作是一种特殊的注释，主要用于修饰类、方法或者变量，提供某些信息供程序在编译或者运行时使用。</p><h3 id="注解的解析方法有哪几种" tabindex="-1"><a class="header-anchor" href="#注解的解析方法有哪几种" aria-hidden="true">#</a> 注解的解析方法有哪几种？</h3><p>注解只有被解析之后才会生效，常见的解析方法有两种：</p><ul><li><strong>编译期直接扫描</strong>：编译器在编译 Java 代码的时候扫描对应的注解并处理，比如某个方法使用<code>@Override</code> 注解，编译器在编译的时候就会检测当前的方法是否重写了父类对应的方法。</li><li><strong>运行期通过反射处理</strong>：像框架中自带的注解(比如 Spring 框架的 <code>@Value</code>、<code>@Component</code>)都是通过反射来进行处理的。</li></ul>',5)]))}const s=a(t,[["render",c],["__file","basic012.html.vue"]]);export{s as default};
