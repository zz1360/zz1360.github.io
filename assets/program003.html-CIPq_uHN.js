const l=JSON.parse('{"key":"v-62d91289","path":"/docs/program-experience/program003.html","title":"程序员为什么要掌握设计模式","lang":"en-US","frontmatter":{"title":"程序员为什么要掌握设计模式","date":"2024/04/27"},"headers":[{"level":2,"title":"如何评价代码的好坏","slug":"如何评价代码的好坏","link":"#如何评价代码的好坏","children":[{"level":3,"title":"什么是可维护性","slug":"什么是可维护性","link":"#什么是可维护性","children":[]},{"level":3,"title":"什么是可读性","slug":"什么是可读性","link":"#什么是可读性","children":[]},{"level":3,"title":"什么是可扩展性","slug":"什么是可扩展性","link":"#什么是可扩展性","children":[]},{"level":3,"title":"什么是灵活性","slug":"什么是灵活性","link":"#什么是灵活性","children":[]},{"level":3,"title":"简洁性","slug":"简洁性","link":"#简洁性","children":[]},{"level":3,"title":"可复用性","slug":"可复用性","link":"#可复用性","children":[]},{"level":3,"title":"可测性性","slug":"可测性性","link":"#可测性性","children":[]}]},{"level":2,"title":"面向对象","slug":"面向对象","link":"#面向对象","children":[]},{"level":2,"title":"设计原则","slug":"设计原则","link":"#设计原则","children":[{"level":3,"title":"单一职责原则","slug":"单一职责原则","link":"#单一职责原则","children":[]},{"level":3,"title":"开闭原则","slug":"开闭原则","link":"#开闭原则","children":[]},{"level":3,"title":"里氏替换原则","slug":"里氏替换原则","link":"#里氏替换原则","children":[]},{"level":3,"title":"接口隔离原则","slug":"接口隔离原则","link":"#接口隔离原则","children":[]},{"level":3,"title":"依赖倒置原则","slug":"依赖倒置原则","link":"#依赖倒置原则","children":[]},{"level":3,"title":"DRY原则、KISS原则、YAGNI原则、LOD原则","slug":"dry原则、kiss原则、yagni原则、lod原则","link":"#dry原则、kiss原则、yagni原则、lod原则","children":[]}]},{"level":2,"title":"设计模式","slug":"设计模式","link":"#设计模式","children":[{"level":3,"title":"创建型","slug":"创建型","link":"#创建型","children":[]},{"level":3,"title":"结构型","slug":"结构型","link":"#结构型","children":[]},{"level":3,"title":"行为型","slug":"行为型","link":"#行为型","children":[]},{"level":3,"title":"装饰者设计模式与静态代理设计模式的对比","slug":"装饰者设计模式与静态代理设计模式的对比","link":"#装饰者设计模式与静态代理设计模式的对比","children":[]}]}],"git":{},"filePathRelative":"docs/program-experience/program003.md"}');export{l as data};
